---
import dbquery from '../script/dbquery.js';
import TypeOptionList from './TypeOptionList.astro';

const {type, title, supportsType, supportsTypeTitle} = Astro.props;


if (Astro.request.method === "POST") {
  try {
    const post_data = await Astro.request.formData();
    const post_add = post_data.get("add");
    const post_label = post_data.get("label");
    
    if (post_add != null && post_label != null) {
			const post_sparql = 'insert { :' + dbquery.uuid() + ' a owl:NamedIndividual ; a a11y:' + type + ' ; rdfs:label "' + post_label + '"@en ; a11y:supports ?supports_id } where { ?supports_id a a11y:' + supportsType + "' ; rdfs:label ' + supportsTypeTitle'"}';
			const post_response = dbquery.updateQuery(post_sparql);
    }

  } catch (error) {
    if (error instanceof Error) {
      console.log(error.message);
    }
  }

}

const sparql = "select ?id ?label ?supports_id ?supports_label where { ?id a a11y:" + type + " . ?id rdfs:label ?label . ?id a11y:supports ?supports_id . ?supports_id rdfs:label ?supports_label}";
const json = await dbquery.selectQuery(sparql);

---

<table>
	<thead>
		<th>{title}</th>
		<th>{supportsTypeTitle}</th>
	</thead>
	<tbody>
		{json.results.bindings.map((item) => <tr><td><a href={'?id=' + item.id.value}>{item.label.value}</a></td><td><a href={'?id=' + item.sup_id.value}>{item.sup_label.value}</a></td></tr>)}
	</tbody>
</table>
<form method="post">
	<p><label for="add-label">Add functional need:</label>
	<input type="text" name="label" id="add-label" /></p>
	<TypeOptionList type={supportsType} title={supportsTypeTitle}></TypeOptionList>
	<p><input type="submit" name="add" value={"Add " + title}/></p>
</form>

