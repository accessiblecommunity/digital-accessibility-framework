---
import * as dbquery from '../script/dbquery.js';
import Layout from '../layouts/Layout.astro';
import {baseUri, idFrag} from '../script/util.js';

const {id, type} = Astro.props;

var labelSparql = "";
if (type == "Reference") labelSparql = "select ?id ?label where { values ?id {:" + id + "} . ?id a11y:refNote ?label }";
else labelSparql = "select ?id ?label where { values ?id {:" + id + "} . ?id rdfs:label ?label }";
const labelResult = await dbquery.selectQuery(labelSparql);

const statementsSparql = "select distinct ?id ?label ?stmt where { values ?itemId {:" + id + "} . ?id a11y:supports/a11y:supports ?itemId ; rdfs:label ?label ; a11y:stmtGuidance ?stmt }";
const statementsResult = await dbquery.selectQuery(statementsSparql);
---
<Layout title={type + ": " + labelResult.results.bindings[0].label.value}>
<p>There are {statementsResult.results.bindings.length} guidance statements that support this {type.toLowerCase()}:</p>
<ul>
{statementsResult.results.bindings.map((statement) => <li><a href={baseUri + 'guidance-statements/' + idFrag(statement.id.value)}>{statement.label.value}</a> - {statement.stmt.value}</li>)}
</ul>
</Layout>