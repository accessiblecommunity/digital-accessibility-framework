---
import * as dbquery from '../script/dbquery.js';
import Layout from '../layouts/Layout.astro';

const {id, type} = Astro.props;

var labelSparql = "";
if (type == "Reference") labelSparql = "select ?id ?label where { values ?id {:" + id + "} . ?id a11y:refNote ?label }";
else labelSparql = "select ?id ?label where { values ?id {:" + id + "} . ?id rdfs:label ?label }";
const labelResult = await dbquery.selectQuery(labelSparql);

const statementsSparql = "select distinct ?id ?label where { values ?itemId {:" + id + "} . ?id a11y:supports/a11y:supports ?itemId ; rdfs:label ?label }";
const statementsResult = await dbquery.selectQuery(statementsSparql);
---
<Layout title={type + ": " + labelResult.results.bindings[0].label.value}>
<p>Statements that support this item:</p>
<ul>
{statementsResult.results.bindings.map((statement) => <li><a href={'/guidance-statements/' + dbquery.idFrag(statement.id.value)}>{statement.label.value}</a></li>)}
</ul>
</Layout>