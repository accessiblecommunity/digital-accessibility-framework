---
import Layout from '../layouts/Layout.astro';
import dbquery from '../script/dbquery.js';

if (Astro.request.method === "POST") {
  try {
    const post_data = await Astro.request.formData();
    const post_add = post_data.get("add");
    const post_label = post_data.get("label");

    if (post_add != null && post_label != null) {
			const post_sparql = 'insert data	{ :' + dbquery.uuid() + ' a owl:NamedIndividual ; a a11y:UserNeedCategory ; rdfs:label "' + post_label + '"@en}';
			const post_response = dbquery.updateQuery(post_sparql);
    }
    
  } catch (error) {
    if (error instanceof Error) {
      console.log(error.message);
    }
  }

}

const sparql = "select ?id ?label ?sup_id ?sup_label where { ?id a a11y:FunctionalNeed . ?id rdfs:label ?label . ?id a11y:supports ?sup_id . ?sup_id rdfs:label ?sup_label } order by ?label";
const json = await dbquery.selectQuery(sparql);

const catsparql = "select ?id ?label where { ?id a a11y:FunctionalNeedCategory } order by ?label";
const catjson = await dbquery.selectQuery(catsparql);


---

<Layout title="Functional Needs">
	<main>
		<h1>Functional Needs</h1>
		<p>Functional needs to date:</p>
		<table>
			<thead><th>Functional Need</th><th>Category</th></thead>
			<tbody>
			{json.results.bindings.map((item) => <tr><td><a href={'?id=' + item.id.value}>{item.label.value}</a></td><td><a href={'?id=' + item.sup_id.value}>{item.sup_label.value}</a></td></tr>)}
			</tbody>
		</table>
		<form method="post">
		<p><label for="add-label">Add functional need:</label>
		<input type="text" name="label" id="add-label" /></p>
		<p><label for="category">Category:</label>
		<select name="category" id="category">
			{catjson.results.bindings.map((item) => <option id={id}>{label}</option>)}
		</select>
		<p><input type="submit" name="add" value="Add functional need"/></p>
		</form>
	</main>
</Layout>

