---
import Layout from '../layouts/Layout.astro';
import { v4 as uuidv4 } from 'uuid';

if (Astro.request.method === "POST") {
  try {
    const post_data = await Astro.request.formData();
    const post_add = post_data.get("add");
    const post_label = post_data.get("label");

    if (post_add != null && post_label != null) {
		const sparql_update = 'prefix :		<https://github.com/michael-n-cooper/a11y-data/daf/#>				prefix a11y:	<https://aihal.net/accessibility/daf/#>				prefix owl:		<http://www.w3.org/2002/07/owl#>				prefix rdf:		<http://www.w3.org/1999/02/22-rdf-syntax-ns#>				prefix rdfs:	<http://www.w3.org/2000/01/rdf-schema#>				insert data	{					:' + uuidv4() + ' a owl:NamedIndividual ;						a a11y:UserNeedCategory ;						rdfs:label "' + post_label + '"@en .				}';
		const post_response = await fetch("http://localhost:7200/repositories/a11y-data/statements",
		  {
		    method: 'POST',
		    headers: {'Content-Type':'application/sparql-update', 'Accept':'application/json'},
		    body: sparql_update
		  });
    }
    
  } catch (error) {
    if (error instanceof Error) {
      console.log(error.message);
    }
  }

}

const response = await fetch("http://localhost:7200/repositories/a11y-data",
  {
    method: 'POST',
    headers: {'Content-Type':'application/sparql-query', 'Accept':'application/json'},
    body: `prefix :		<https://github.com/michael-n-cooper/a11y-data/daf/#>
prefix a11y:	<https://aihal.net/accessibility/daf/#>
prefix owl:		<http://www.w3.org/2002/07/owl#>
prefix rdf:		<http://www.w3.org/1999/02/22-rdf-syntax-ns#>
prefix rdfs:	<http://www.w3.org/2000/01/rdf-schema#>

select ?id ?label ?sup_id ?sup_label
where {
    ?id a a11y:FunctionalNeed .
    ?id rdfs:label ?label .
	?id a11y:supports ?sup_id .
	?sup_id rdfs:label ?sup_label
}
order by ?label`
  });

const json = await response.json();


---

<Layout title="Categories">
	<main>
		<h1>Functional Needs</h1>
		<p>Functional needs to date:</p>
		<table>
			<thead><th>Functional Need</th><th>Category</th></thead>
			<tbody>
			{json.results.bindings.map((item) => <tr><td><a href={'?id=' + item.id.value}>{item.label.value}</a></td><td><a href={'?id=' + item.sup_id.value}>{item.sup_label.value}</a></td></tr>)}
			</tbody>
		</table>
		<form method="post">
		<p><label for="add-label">Add category:</label>
		<input type="text" name="label" id="add-label" /></p>
		<p><input type="submit" name="add" value="Add category"/></p>
		</form>
	</main>
</Layout>

