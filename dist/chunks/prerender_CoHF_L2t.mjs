import { c as createAstro, a as createComponent, r as renderTemplate, b as addAttribute, d as renderHead, e as renderSlot, f as renderComponent, u as unescapeHTML, m as maybeRenderHead, F as Fragment } from './astro_Uihg7KW2.mjs';
import 'kleur/colors';
import 'clsx';
import 'cssesc';
/* empty css                        */
import { JSDOM } from 'jsdom';
import fileUrl from 'file-url';
import * as commonmark from 'commonmark';

function idFrag$1(uri) {
	return uri.substring(uri.indexOf("#") + 1)
}

function mdToHtml(str) {
	let reader = new commonmark.Parser();
	let writer = new commonmark.HtmlRenderer();
	let parsed = reader.parse(str);
	let result = writer.render(parsed);
	return result;
}

async function apiGet$1(path) {
	const data = await fetch ("http://localhost:3000/api/" + path);
	const json = await data.json();
	return json;
}

const baseUri = "/daf-front/";

const $$Astro$l = createAstro("https://michael-n-cooper.github.io");
const $$Layout = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$l, $$props, $$slots);
  Astro2.self = $$Layout;
  const { title } = Astro2.props.frontmatter || Astro2.props;
  return renderTemplate`<html lang="en"> <head><meta charset="UTF-8"><meta name="description" content="Astro description"><meta name="viewport" content="width=device-width"><link rel="icon" type="image/svg+xml"${addAttribute(baseUri + "favicon.svg", "href")}><link rel="preconnect" href="https://fonts.googleapis.com"><link rel="preconnect" href="https://fonts.gstatic.com" crossorigin><link href="https://fonts.googleapis.com/css2?family=Atkinson+Hyperlegible:ital,wght@0,400;0,700;1,400;1,700&display=swap" rel="stylesheet"><link rel="stylesheet" type="text/css"${addAttribute(baseUri + "daf.css", "href")}><meta name="generator"${addAttribute(Astro2.generator, "content")}><title>${title}</title>${renderHead()}</head> <body> <header> <h1>${title}</h1> </header> <main>${renderSlot($$result, $$slots["default"])}</main> <footer> <p><a${addAttribute(baseUri, "href")}>Overview</a> | <a${addAttribute(baseUri + "docs", "href")}>Documentation</a> | <a${addAttribute(baseUri + "matrix", "href")}>Matrix</a></p> <p xmlns:cc="http://creativecommons.org/ns#" xmlns:dct="http://purl.org/dc/terms/"><span property="dct:title">Digital Accessibility Framework database</span> by <span property="cc:attributionName">Michael Cooper</span> is licensed under <a href="http://creativecommons.org/licenses/by-nc/4.0/?ref=chooser-v1" target="_blank" rel="license noopener noreferrer" style="display:inline-block;">Attribution-NonCommercial 4.0 International<img style="height:22px!important;margin-left:3px;vertical-align:text-bottom;" src="https://mirrors.creativecommons.org/presskit/icons/cc.svg?ref=chooser-v1"><img style="height:22px!important;margin-left:3px;vertical-align:text-bottom;" src="https://mirrors.creativecommons.org/presskit/icons/by.svg?ref=chooser-v1"><img style="height:22px!important;margin-left:3px;vertical-align:text-bottom;" src="https://mirrors.creativecommons.org/presskit/icons/nc.svg?ref=chooser-v1"></a></p> </footer> </body></html>`;
}, "C:/Documents/code/GitHub/michael-n-cooper/daf-front/src/layouts/Layout.astro", void 0);

const html = "<p>This tool contains content generated by people working on the <a href=\"https://github.com/accessiblecommunity/Digital-Accessibility-Framework\">Digital Accessibility Framework</a>. The content is a set of accessibility guidance statements that are intended collectively to address a wide range of functional and user needs. The statements are mapped to a matrix that helps us to determine where new accessibility needs need to be explored.</p>\n<p>For most users, the <a href=\"../matrix\">matrix</a> is the primary resource to explore. Understanding it requires understanding of the remainder of the site, so that is introduced first.</p>\n<p>The W3C draft <a href=\"https://w3c.github.io/fast/\">Framework for Accessible Specification of Technologies (FAST)</a> defines the concepts of functional needs, intersection needs, and user needs that were adopted for this work:</p>\n<ul>\n<li>A functional need is a statement that describes a specific gap in one’s ability, or a specific mismatch between ability and the designed environment or context.</li>\n<li>An intersectional functional need results from an individual having more than one functional need simultaneously in a given context.</li>\n<li>A user need is a high level accessibility characteristic of content and/or a user interface that is necessary for users to complete an objective.</li>\n</ul>\n<p>The team developed a set of <a href=\"../functional-needs\">functional needs</a> that represents a broad set of needs within major <a href=\"../functional-need-categories\">categories</a> such as sensory, mobility, etc. The functional needs are fairly generic, with the expectation that various specific needs may fit within the generic need. <a href=\"../user-needs\">User needs</a> mostly correspond to the “POUR” guidelines from WCAG, with some additions. These are also high level needs, which intersect with the functional needs to show a potential accessibility need for digitial content. The context of the user need is the type of content with which the user is engaging, which are called <a href=\"../user-need-contexts\">user need contexts</a>. Some combinations of user need and context are non-sensical and have been marked as “NA”. As examples, one does not perceive a user input action by itself, or operate static content without controls, so there are no accessibility needs to define for such intersections. The functional needs, user needs, and user need contexts intersect in a 3-dimensional matrix of potential accessibility needs.</p>\n<p>Accessibility needs are expressed as <a href=\"../guidance-statements\">guidance statements</a>. Guidance statements are short statements of the user’s specific functional need, and what accessibility accommodation will address this need. These statements are not technical and do not consider how the need might be met, they simply document the need. Each statement is mapped to one or more specific triples of functional need, user need, and user need context.</p>\n<p>The <a href=\"../matrix\">matrix</a> shows the guidance statements in cells according to their mappings. The matrix is reduced to 2 dimensions by repeating the user need contexts for each user need. Statements appear in all the cells for which they have mappings.</p>\n<p>At the top of the table, there are some checkboxes to activate features to help explore the matrix:</p>\n<ul>\n<li>“Show cell position” adds a light shadow to all cells in the row and column over which the mouse is positioned, to help visually track the relationships expressed in the table.</li>\n<li>”Show same statements” changes the colour and weight of all instances of a given accessibility statement in the table, when the mouse is positioned over one of them.</li>\n<li>”Fit matrix” scales the table down to the width of the browser window. Doing this rather than browser sizing allows some readability optimizations. In browsers that support it, moving the mouse over a table cell with guidance statements will open a popover containing the contents of the cell displayed at the original font size.</li>\n</ul>";

				const frontmatter = {"layout":"../../layouts/Layout.astro","title":"Documentation"};
				const file = "C:/Documents/code/GitHub/michael-n-cooper/daf-front/src/pages/docs/index.md";
				const url = "/daf-front/docs";
				function rawContent() {
					return "This tool contains content generated by people working on the [Digital Accessibility Framework](https://github.com/accessiblecommunity/Digital-Accessibility-Framework). The content is a set of accessibility guidance statements that are intended collectively to address a wide range of functional and user needs. The statements are mapped to a matrix that helps us to determine where new accessibility needs need to be explored.\r\n\r\nFor most users, the [matrix](../matrix) is the primary resource to explore. Understanding it requires understanding of the remainder of the site, so that is introduced first.\r\n\r\nThe W3C draft [Framework for Accessible Specification of Technologies (FAST)](https://w3c.github.io/fast/) defines the concepts of functional needs, intersection needs, and user needs that were adopted for this work:\r\n\r\n* A functional need is a statement that describes a specific gap in one's ability, or a specific mismatch between ability and the designed environment or context. \r\n* An intersectional functional need results from an individual having more than one functional need simultaneously in a given context.\r\n* A user need is a high level accessibility characteristic of content and/or a user interface that is necessary for users to complete an objective.\r\n\r\nThe team developed a set of [functional needs](../functional-needs) that represents a broad set of needs within major [categories](../functional-need-categories) such as sensory, mobility, etc. The functional needs are fairly generic, with the expectation that various specific needs may fit within the generic need. [User needs](../user-needs) mostly correspond to the \"POUR\" guidelines from WCAG, with some additions. These are also high level needs, which intersect with the functional needs to show a potential accessibility need for digitial content. The context of the user need is the type of content with which the user is engaging, which are called [user need contexts](../user-need-contexts). Some combinations of user need and context are non-sensical and have been marked as \"NA\". As examples, one does not perceive a user input action by itself, or operate static content without controls, so there are no accessibility needs to define for such intersections. The functional needs, user needs, and user need contexts intersect in a 3-dimensional matrix of potential accessibility needs. \r\n\r\nAccessibility needs are expressed as [guidance statements](../guidance-statements). Guidance statements are short statements of the user's specific functional need, and what accessibility accommodation will address this need. These statements are not technical and do not consider how the need might be met, they simply document the need. Each statement is mapped to one or more specific triples of functional need, user need, and user need context.\r\n\r\nThe [matrix](../matrix) shows the guidance statements in cells according to their mappings. The matrix is reduced to 2 dimensions by repeating the user need contexts for each user need. Statements appear in all the cells for which they have mappings. \r\n\r\nAt the top of the table, there are some checkboxes to activate features to help explore the matrix:\r\n\r\n* \"Show cell position\" adds a light shadow to all cells in the row and column over which the mouse is positioned, to help visually track the relationships expressed in the table.\r\n* \"Show same statements\" changes the colour and weight of all instances of a given accessibility statement in the table, when the mouse is positioned over one of them.\r\n* \"Fit matrix\" scales the table down to the width of the browser window. Doing this rather than browser sizing allows some readability optimizations. In browsers that support it, moving the mouse over a table cell with guidance statements will open a popover containing the contents of the cell displayed at the original font size.\r\n";
				}
				function compiledContent() {
					return html;
				}
				function getHeadings() {
					return [];
				}

				const Content = createComponent((result, _props, slots) => {
					const { layout, ...content } = frontmatter;
					content.file = file;
					content.url = url;

					return renderTemplate`${renderComponent(result, 'Layout', $$Layout, {
								file,
								url,
								content,
								frontmatter: content,
								headings: getHeadings(),
								rawContent,
								compiledContent,
								'server:root': true,
							}, {
								'default': () => renderTemplate`${unescapeHTML(html)}`
							})}`;
				});

const index$a = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	Content,
	compiledContent,
	default: Content,
	file,
	frontmatter,
	getHeadings,
	rawContent,
	url
}, Symbol.toStringTag, { value: 'Module' }));

const $$Astro$k = createAstro("https://michael-n-cooper.github.io");
const $$IdLabel = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$k, $$props, $$slots);
  Astro2.self = $$IdLabel;
  const { section } = Astro2.props;
  const json = await apiGet$1(section);
  return renderTemplate`${maybeRenderHead()}<ul> ${json.map((item) => renderTemplate`<li><a${addAttribute(baseUri + section + "/" + idFrag$1(item.id), "href")}>${item.label}</a></li>`)} </ul>`;
}, "C:/Documents/code/GitHub/michael-n-cooper/daf-front/src/components/IdLabel.astro", void 0);

const $$Astro$j = createAstro("https://michael-n-cooper.github.io");
const $$Index$9 = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$j, $$props, $$slots);
  Astro2.self = $$Index$9;
  return renderTemplate`${renderComponent($$result, "Layout", $$Layout, { "title": "Functional Need Category" }, { "default": ($$result2) => renderTemplate` ${renderComponent($$result2, "IdLabel", $$IdLabel, { "section": "functional-need-categories" })} ` })}`;
}, "C:/Documents/code/GitHub/michael-n-cooper/daf-front/src/pages/functional-need-categories/index.astro", void 0);

const $$file$i = "C:/Documents/code/GitHub/michael-n-cooper/daf-front/src/pages/functional-need-categories/index.astro";
const $$url$i = "/daf-front/functional-need-categories";

const index$9 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	default: $$Index$9,
	file: $$file$i,
	url: $$url$i
}, Symbol.toStringTag, { value: 'Module' }));

const ids$e = JSON.parse('["ad45bde7-db4c-4b55-8ae8-d294424f8f3b","591551dc-82a6-42df-899f-2d610d990ad8","17fab5b9-d623-48d5-af11-238eea61e1ff","b37deaf5-10b7-4921-b2fa-fd5179ee691a"]');

const ids$f = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	ids: ids$e
}, Symbol.toStringTag, { value: 'Module' }));

const $$Astro$i = createAstro("https://michael-n-cooper.github.io");
async function getStaticPaths$7() {
  const module = await Promise.resolve().then(() => ids$f);
  const { ids } = module;
  return ids;
}
const $$id$7 = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$i, $$props, $$slots);
  Astro2.self = $$id$7;
  const { id } = Astro2.params;
  const json = await apiGet$1("functional-need-categories/" + id);
  return renderTemplate`${renderComponent($$result, "Layout", $$Layout, { "title": "Functional Need Category: " + json[0].label }, { "default": ($$result2) => renderTemplate` ${maybeRenderHead()}<p>${json[0].functionalNeeds.length} functional needs:</p> <ul> ${json[0].functionalNeeds.map((item) => renderTemplate`<li><a${addAttribute(baseUri + "functional-needs/" + idFrag$1(item.id), "href")}>${item.label}</a></li>`)} </ul> ` })}`;
}, "C:/Documents/code/GitHub/michael-n-cooper/daf-front/src/pages/functional-need-categories/[id].astro", void 0);

const $$file$h = "C:/Documents/code/GitHub/michael-n-cooper/daf-front/src/pages/functional-need-categories/[id].astro";
const $$url$h = "/daf-front/functional-need-categories/[id]";

const _id_$7 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	default: $$id$7,
	file: $$file$h,
	getStaticPaths: getStaticPaths$7,
	url: $$url$h
}, Symbol.toStringTag, { value: 'Module' }));

const $$Astro$h = createAstro("https://michael-n-cooper.github.io");
const $$Index$8 = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$h, $$props, $$slots);
  Astro2.self = $$Index$8;
  return renderTemplate`${renderComponent($$result, "Layout", $$Layout, { "title": "Functional Needs" }, { "default": ($$result2) => renderTemplate` ${renderComponent($$result2, "IdLabel", $$IdLabel, { "section": "functional-needs" })} ` })}`;
}, "C:/Documents/code/GitHub/michael-n-cooper/daf-front/src/pages/functional-needs/index.astro", void 0);

const $$file$g = "C:/Documents/code/GitHub/michael-n-cooper/daf-front/src/pages/functional-needs/index.astro";
const $$url$g = "/daf-front/functional-needs";

const index$8 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	default: $$Index$8,
	file: $$file$g,
	url: $$url$g
}, Symbol.toStringTag, { value: 'Module' }));

const ids$c = JSON.parse('["f65b7ac6-6d0d-4540-8891-73769f96b05f","c5b13f35-4f05-4ca3-958f-b884ffd345b4","0a7f93c7-fcb9-435a-83db-ea5629c7b540","6c299fff-a166-455c-8dcb-0b7390d4fb6e","d088e6d6-fba9-42f3-bef7-718a620d1a1c","e11584cb-6f33-44cf-9326-76f2291fcc3c","43445d41-01bc-47fd-80cf-a3af488afd63","6cf6ed75-a51a-4665-9ce3-486579fcaa20","1954d50b-bc66-46ed-b749-735345b0c59a","863b0042-5d00-4388-9a39-a702a77fff8e","4d8291fc-7381-4e37-a168-248e19b67c4a","85973cb0-cc79-42f5-9697-51bd6b9cb511","2ba8875a-ba00-41ae-8ad0-7b8b5bbb8de3","e952a052-df79-4714-a77b-d68e3f9570a6","515e73f8-e0f4-4fe3-9f0d-d2302a37525f","d5b5f0b7-6b79-4890-977c-cae8c2c0ecc0","37d5e7fa-7b54-4c4d-b93a-42edf5891153","771de5af-a137-40c0-a53a-ae61df00ee90","64b978fa-415b-44a4-9972-2186811c8bb0","e8c95c64-edf1-40cf-930b-7eeb843e3310","36d8da53-1821-4e97-9992-912854ffb2cd","12af495f-dd3c-488e-9324-dc1ef54260f8","057b5d27-6d1f-46a7-bf79-d47582f0f447","e19b8db8-2268-428a-8110-d1dd8511950c"]');

const ids$d = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	ids: ids$c
}, Symbol.toStringTag, { value: 'Module' }));

const $$Astro$g = createAstro("https://michael-n-cooper.github.io");
const $$MatrixItemDetails = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$g, $$props, $$slots);
  Astro2.self = $$MatrixItemDetails;
  const { section, id, type } = Astro2.props;
  const json = await apiGet$1(section + "/" + id);
  return renderTemplate`${renderComponent($$result, "Layout", $$Layout, { "title": type + ": " + json[0].label }, { "default": ($$result2) => renderTemplate` ${maybeRenderHead()}<p>${json[0].statements.length} guidance statements support this ${type.toLowerCase()}:</p> <ul> ${json[0].statements.map((statement) => renderTemplate`<li><a${addAttribute(baseUri + "guidance-statements/" + idFrag$1(statement.id), "href")}>${statement.label}</a> - ${statement.stmt}</li>`)} </ul> ` })}`;
}, "C:/Documents/code/GitHub/michael-n-cooper/daf-front/src/components/MatrixItemDetails.astro", void 0);

const $$Astro$f = createAstro("https://michael-n-cooper.github.io");
async function getStaticPaths$6() {
  const module = await Promise.resolve().then(() => ids$d);
  const { ids } = module;
  return ids;
}
const $$id$6 = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$f, $$props, $$slots);
  Astro2.self = $$id$6;
  const { id } = Astro2.params;
  return renderTemplate`${renderComponent($$result, "MatrixItemDetails", $$MatrixItemDetails, { "section": "functional-needs", "id": id, "type": "Functional Need" })}`;
}, "C:/Documents/code/GitHub/michael-n-cooper/daf-front/src/pages/functional-needs/[id].astro", void 0);

const $$file$f = "C:/Documents/code/GitHub/michael-n-cooper/daf-front/src/pages/functional-needs/[id].astro";
const $$url$f = "/daf-front/functional-needs/[id]";

const _id_$6 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	default: $$id$6,
	file: $$file$f,
	getStaticPaths: getStaticPaths$6,
	url: $$url$f
}, Symbol.toStringTag, { value: 'Module' }));

const $$Astro$e = createAstro("https://michael-n-cooper.github.io");
const $$Index$7 = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$e, $$props, $$slots);
  Astro2.self = $$Index$7;
  const section = "statements";
  const json = await apiGet$1(section);
  return renderTemplate`${renderComponent($$result, "Layout", $$Layout, { "title": "Guidance statements" }, { "default": ($$result2) => renderTemplate` ${maybeRenderHead()}<p>${json.length} guidance statements:</p> <ul> ${json.map((statement) => renderTemplate`<li><a${addAttribute(baseUri + "guidance-statements/" + idFrag$1(statement.id), "href")}>${statement.label}</a> - ${statement.stmt}</li>`)} </ul> ` })}`;
}, "C:/Documents/code/GitHub/michael-n-cooper/daf-front/src/pages/guidance-statements/index.astro", void 0);

const $$file$e = "C:/Documents/code/GitHub/michael-n-cooper/daf-front/src/pages/guidance-statements/index.astro";
const $$url$e = "/daf-front/guidance-statements";

const index$7 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	default: $$Index$7,
	file: $$file$e,
	url: $$url$e
}, Symbol.toStringTag, { value: 'Module' }));

const ids$a = JSON.parse('["4d2a8c90-e7f7-4553-a1b0-88e4a68c2dad","258d90ad-98f1-4a55-b7ba-b7ac507dbf44","2913a659-12ef-40ea-af48-9576aed78427","5cd669ab-443a-4ae2-a914-3507669d148e","a4fe5517-6816-416b-a17a-eae7a8b9800e","9efffa22-8823-478b-ac45-4ef74c9c7b3f","1f7355e4-73b7-4f12-8676-3aeda1d352f2","94f082ec-969b-47ab-978c-8d6d08dd00e0","e043627a-e26f-4014-9af7-b0377e1c13d7","a386ea24-0e1b-436e-b60d-8c98d6d791d8","5d4d7886-c95b-43ae-af82-94248a6b00b4","7d497c67-d38e-4d05-8836-13dc9acceeef","691492df-e5c5-4338-a104-031a36ef78dd","75b67c9b-3a71-452e-9efd-50e30ef4ed1c","4423a805-aca4-4992-b195-426b97fe30ed","e6374752-0993-4fd2-b589-ed55ff45592a","6980f5ec-6994-4d7e-a0d0-ba7c17a520a3","a29347b8-47a2-44e2-87a1-d9b7e424f484","aa3bcd79-8d0f-4222-911d-b7451baa0bdd","89a67b3c-b4b5-40e2-b585-5f58f7e37f0a","71cba35f-2ea5-4810-b0a0-3aeec763e524","9f696abe-06fe-4d97-92d2-ba06e886b90f","6370f528-e7ac-4ff8-bc81-2de6dd1f769d","26514779-aa2a-44f2-a794-e37daba3aa57","b49e84f5-e391-445b-9222-238d5e6b7aeb","f15cb644-3f48-4a0e-b264-c4dd8906aab0","024f8297-831d-4433-825a-0d6c8aa65e84","7cc980f6-fb80-45a4-9425-ca52a66fd254","0a15e847-227e-40bb-9e49-dac2acaf90b1","672ca6a8-7a3e-446e-b08a-5f5a41bacadd","2de64923-7318-4347-aa67-6582f76be82a","a297484e-1ff8-41df-baea-35516469fd93","d6283071-4b73-4a7c-9ec5-dba17065c745","706e9789-2a17-43a2-8e5f-340c46f6b8f4","52d4562d-853d-46db-af7b-d8f3e588d36f","a73e4411-12e4-4207-901d-57c78499d4b3","ef3f06f0-df20-4cf5-a40d-e22070236018","a0da985a-96e6-4892-9626-2c49a130f393","ba21f70c-ae9a-451e-be27-719419d9b99f","9c14665e-d238-459c-8480-249cee5a63a5","c190d768-4a09-4b26-963c-ded4e03c25b5","cf2988b6-dfe3-423d-8522-1e1ad421a588","62caec8e-972c-4c5e-9632-79700959b498","5f2251bc-602f-44db-9bb4-2bb2053f0426","010f0e13-57d7-4245-b38f-e98ca8acbddc","55017066-518e-48cb-b5e3-3f6493ff789f","a6feb95f-fce8-4995-8581-89a0909aeea3","b79eaa46-312d-423b-981f-73399ad455e1","9c700619-f55f-487c-a3c2-07fb1340b6da","7cfc0c7f-2022-4c5b-bf85-62ede91e687d","90679118-15d0-42c1-956e-23005aa233be","ad19f90e-83b7-444b-9b8a-48c1c0ac0f6c","e7aa70b2-0d16-4ca0-836f-94408988b7e2","ae317419-cf35-48de-9919-af49f15a1adb","bee3d914-aa65-42cd-aff5-25f36d022891","106e6937-1cc0-4b9b-b312-7427093ec263","168a09da-1ed3-405b-8728-0344038ac140","f1a195ce-af38-46d0-975e-ce576fa78d81","28447aa4-360a-470b-91ca-da8005fd8be2","0a44028c-4c10-4d8c-b21f-f45efa2ab827","e88fe746-aba8-44af-9dfe-59d7e1e727df","0c10ec3e-59b6-40be-99c2-1b0cb82e9bd8","2b810e27-d8d3-416f-9ea4-6d65f39584f1","31406f3d-a813-4168-b909-c8783c219dd9","c32f4f7f-c01f-41b2-8973-94348a0a52da","8a47c3f9-0e9e-4e92-9f48-7c1259b30759","34cb3f68-2f9d-4d2e-a1a4-0c92a9fbe853","6c2a9f2f-1860-478b-bfcf-812c5f225847","a0a9b9cd-1f04-4921-9b9c-0c0a23704d72","103ffec7-114e-4961-86ae-6370ebca5459","02db5ed3-5ace-4d67-bdad-0f59946b07b3","a5c3a496-fabb-44c2-95ce-98417f786538","3ae63a4f-0565-4422-a4fa-a096aa6a17e1","29c039bb-013f-4e62-a5b8-3e1ef3b1ec54","3d5512a9-091d-493b-9dfe-f91fa12314bf","87284c04-6790-402b-92d2-924f1424c5d7","d8626c1c-b9b1-49b0-b9b7-0b8c98ef7ea9","848e1426-f334-4f41-8cb1-b9cc012666b4","edda7dea-b7d3-469e-b643-2af19a47213f","26ab8aff-0162-4bc9-ba82-b864ba587e35","09393b55-7fca-4c19-90fa-2f7f7f0fbba9","5e1bd1ea-a705-4d49-9a1a-3bec97627bbb","7c8078bb-aa70-4f9f-abf6-7aec6d0fe49b","0ef54f1b-d9a0-4530-9c86-dd4e0788caab","3893a19f-dbad-4e72-8349-51abb0d6ba70","cbfbd6d7-3df8-47de-82bb-31d4188d4527","8bfc208e-2bf8-43f5-8cef-267d154e2525","2f136aa4-2447-4c51-bc0c-3d5aa00a7f3a","656cc4c9-301d-4d28-9223-bf81da70f3f2","ed056a96-e1bb-4acf-842c-b20cf3436454","fa334a6a-846a-4b5e-8dfe-3ca5c1f33537","e37531cf-83dd-4b03-bf09-0fc40aa4c836","7d9facb8-93f3-4f35-9950-7b4d1ae1a91d","519678d5-9ece-49ce-8a02-cad3c5e28da0","8eb5afa2-e0b8-434c-9011-5bb1ed1f88d5","6c1c6c5d-a91e-4200-9bc0-2965a2095df3","33168e9b-9386-4abb-b4c0-b6a378d4f0aa","fa60ac50-f9a0-46c4-9ae6-25f1f0e688e4","e451424f-2c93-4802-a614-a660f965c11a","f225cef4-dfb9-46df-83ff-a70f32f8df01","9eb612be-ab7a-4825-964b-8c2501b78f1c","57def278-a92a-445b-8c6d-a3f9ddfda342","bad00a92-3179-4864-87b3-22c5abb1f9d3","a8551f47-a77b-4518-b365-7395641d4aca","632d884f-bf1b-475e-927e-09b4b2e976f8","05490dd3-dfc8-43e7-a678-87399b60c02f","639d2a38-a809-41af-8fab-60f6db43cd11","f4ff74a5-ff8b-45bc-a7ee-dba0453e6efb","b2ce8bb9-b33e-49e9-bfd2-bb89958f422f","1d5c499c-8643-48cd-a5be-dabfbb0f8b8c","d548fbf1-3860-4d79-a657-813b3a2ad152","46612672-0064-4638-8517-87e161ebf141","dcec8a5b-882b-422f-bfa3-d7f527fea806","83caf675-d2ab-4a0d-a4cd-942682c0b21e","58bc3f9f-3ac8-4569-9db1-ccbcd6e26ffa","1df598b2-fb25-4c63-b281-1438f56bc0c7","9b89d09d-5617-4720-aec1-cd8731af98b3","f07d0bf0-90aa-4436-9690-d9e89e68fb96","3cfabee3-7d70-448d-98d9-1637cf3a0acb","03b3bba2-7fb4-4c1f-bb48-80ee5253caef","76fb0b96-60df-474f-b123-de9aa819b33b","80f50a39-237b-4e2f-bda9-6f6ac4004f3d","480892cd-cb77-4609-aaf4-a0a1843c4902","75edfec2-d1ee-4e5a-9e14-da5d27b7eea7","d8cdad6c-e7e3-41df-a752-ed66bdde90a7","b3712952-e7e2-447f-9b1e-8a95fe288a61","bad6b3ad-d330-4a66-8608-899c8c3a3419","aa39e8f3-f635-4aca-9132-fe27e0466994","a3a05d42-9ca7-43a3-91bd-58f0528fb25f","d8a499af-b0d3-4f43-9198-2e554bfa4258","84ee6c43-a2c9-4370-8ebb-b737a089b74f","6b41a178-0023-4a5a-b7f7-7401cd4cd3d9","8c571d17-1b14-438d-b5a1-67d4733942d1","5de2c0bb-db4e-49b7-87e0-915bc6db8761","f19c4d44-de22-4dca-83e5-f0d4afdf9061","11d11bb4-d73d-435b-b220-da2e1e678db1","e5c140fb-f55f-415a-bac7-519a9bbadcda","eb99f3cf-e299-4ea4-a28b-6b56238b84c3","71f0345c-f7f2-4197-adda-cde92f0e9a98","be8dbc1c-5562-488f-88eb-2f5e236a1006","ea07f53c-15a0-4174-8a74-3ce423d3ce25","414fb53d-27ec-4d9a-9e8e-590ffb2e0687","f46a4184-e7b4-4044-8541-e3193de9e952","f7a2bdde-398a-4e6b-b3c2-279985c38066","b3d75ba7-aa4e-482e-8043-f8b3896781dc","8b81ec2f-e0f2-44d9-9640-e325976036ae","2880bbf1-9697-41b1-b8a7-efdb3359e4fb","00cb0b64-1b24-46d3-9a65-6cfd5379cc8c","577daab8-bedc-416c-9bab-d6eb50809bde","8980a91b-f74c-4496-a408-d2b2edde957f","2a6ab4ff-a044-4113-8859-06167746b277","1557f43d-1954-4c2d-959f-4401c6985a85","190cab64-c01f-463d-81e5-a1d5c87e5fb0","ac8f7bb0-2a8c-481e-9e7f-97203ee1e4bf","7ea6e03a-1215-4d5f-be2e-f137effa9b70","e8ba9b50-5c96-48e1-a2d7-a6904d5cf518","8a57728d-2515-429c-a8b9-cfef45947d30","50ec2df0-1692-4142-86d0-20cf4ee8ae38","d02eaded-755a-4a66-aeab-4413321742e6","4c3793de-693f-487b-bf07-1599e1c74fdd","3eff4331-1a19-4b02-881b-58f6eb09cc13","e95c7e82-32cb-45a7-94cd-d43021c2bddf","c2e3f1cf-f695-4d87-8956-8ceea84dc24c","ee48d719-0bc9-4056-a98e-a8560335fdcb","b3ea6d25-f258-44a0-86cc-7a13ff44e34c","67c664a0-8a66-4769-aadd-5c641b4e5de6","286ff44b-e78d-45eb-9889-d02bddd6d1a3","b0a31e1b-fd35-4297-a911-6629285f4e31","d299d642-8d85-4001-adbf-bd5117afd66e","acb47e32-e0c3-4824-bb02-916202fed5b7","daafc1a3-e7b4-411f-bf81-4f6f7717a309","d5c706e6-0e26-4227-b3f2-6d3d5c5b0af3","bf255a1e-7853-452f-8d97-2be539eb2191","41bbb7a3-fe1c-455c-bbe9-88f6527476f3","22d9f5ed-4a3c-435f-a3fe-39aa35ec9d3b","bb52d06e-960e-4fde-8247-103602493922","afeabe02-d9b0-4f95-827d-0bc1c514933a","7c24c464-07c2-4ada-b63f-85f33f984be2","63a7f5b5-72b5-4997-a825-6c3b7e5656c8","9e0698cc-a1a0-4933-99d3-7924fec0e30f","b14b39a7-757d-43c5-9d2c-6beeab757fe3","2631cb97-1250-4f6d-b043-f07b913b6740","e1beecf3-e67f-430f-87b4-b179009f6ed2","1528a674-202a-45e2-9bbc-b3d5cb4124d4","7d4a8d28-108b-4e84-94ee-43cdc9924665","97f0ee1f-09ac-45e4-9c0b-bc8dd390f0ed","35c7bb08-dad6-4a3c-b4ae-a03d31dd2df5","11b63249-d44b-4ef0-a796-199b515de5a2","42ae18df-07b4-476d-9d19-bad58805bd3a","99faaf10-00d9-4334-aebc-5095c058d4d4","a23a9bb8-142e-426f-b124-2b0cdee18a2f","9c01ee30-16b4-468e-a4e3-3d6a09fb5405","4f130063-aabb-4744-bedd-471321666ee8","a2f0fdc4-d44a-4f7d-98cd-5f14edcef690","98e634e3-498d-4d71-9706-39b87e23614f","01f481e3-a154-4d4f-91cf-6f94e2bf474f","bf9f707a-496a-4e25-b17c-746517b986ca","a799a21c-e46f-4166-84c7-505765d7de14","3f82d9c2-debe-4a59-a0dd-52adf88fe12c","64b1a74b-434a-4c26-a8c9-30bd381e8d94","1dfa16fa-a0e9-4228-8e70-10349582fe3d","69da3652-c3d4-4ac9-a2e8-2f42dc7a6f3c","1e13b1db-a287-4111-b0e9-a7ee911caa43","997b4b96-6537-4c65-9380-f6422471ea07","c866e8db-228d-48f4-8ddd-404abca12485"]');

const ids$b = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	ids: ids$a
}, Symbol.toStringTag, { value: 'Module' }));

const $$Astro$d = createAstro("https://michael-n-cooper.github.io");
async function getStaticPaths$5() {
  const module = await Promise.resolve().then(() => ids$b);
  const { ids } = module;
  return ids;
}
const $$id$5 = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$d, $$props, $$slots);
  Astro2.self = $$id$5;
  const { id } = Astro2.params;
  const json = await apiGet$1("statements/" + id);
  let rm = new Array();
  json[0].mappings.forEach(async function(mapping) {
    let detail = apiGet$1("mappings/" + idFrag$1(mapping.id));
    rm.push(detail);
  });
  const richerMappings = await Promise.all(rm).then((val) => {
    var res = new Array();
    for (let i = 0; i < val.length; i++) {
      res.push(val[i][0]);
    }
    return res;
  });
  return renderTemplate`${renderComponent($$result, "Layout", $$Layout, { "title": json[0].label }, { "default": ($$result2) => renderTemplate`${maybeRenderHead()}<div><p class="stmt">${json[0].stmt}</p>${typeof json[0].note !== "undefined" && json[0].note != null ? renderTemplate`${renderComponent($$result2, "Fragment", Fragment, {}, { "default": ($$result3) => renderTemplate`${unescapeHTML("<h2>Notes</h2>" + mdToHtml(json[0].note))}` })}` : ""}<h2>Supports</h2><table><thead><tr><th>Functional need</th><th>User need</th><th>Context</th></tr></thead>${richerMappings.map((item) => renderTemplate`<tr><td><a${addAttribute(baseUri + (typeof item.functionalNeed === "undefined" ? "intersection-needs/" : "functional-needs/") + idFrag$1(typeof item.functionalNeed === "undefined" ? item.intersectionNeed.id : item.functionalNeed.id), "href")}>${typeof item.functionalNeed === "undefined" ? item.intersectionNeed.label : item.functionalNeed.label}</a></td><td><a${addAttribute(baseUri + "user-needs/" + idFrag$1(item.userNeed.id), "href")}>${item.userNeed.label}</a></td><td><a${addAttribute(baseUri + "user-need-contexts/" + idFrag$1(item.userNeedRelevance.id), "href")}>${item.userNeedRelevance.label}</a></td></tr>`)}</table></div><h2>References</h2><ul>${json[0].references.map((item) => renderTemplate`<li>${idFrag$1(item.type)}: <a${addAttribute(item.refIRI, "href")}>${item.refNote}</a></li>`)}</ul><h2>Tags</h2><ul>${json[0].tags.map((item) => renderTemplate`<li><a${addAttribute(baseUri + "tags/" + idFrag$1(item.id), "href")}>${item.label}</a></li>`)}</ul><p>Imported from <a${addAttribute(json[0].contentIRI, "href")}>${json[0].contentIRI}</a></p>` })}`;
}, "C:/Documents/code/GitHub/michael-n-cooper/daf-front/src/pages/guidance-statements/[id].astro", void 0);

const $$file$d = "C:/Documents/code/GitHub/michael-n-cooper/daf-front/src/pages/guidance-statements/[id].astro";
const $$url$d = "/daf-front/guidance-statements/[id]";

const _id_$5 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	default: $$id$5,
	file: $$file$d,
	getStaticPaths: getStaticPaths$5,
	url: $$url$d
}, Symbol.toStringTag, { value: 'Module' }));

const ids$8 = JSON.parse('["928d5457-39bd-43c0-8d8f-fa98374d84ae","928d5457-39bd-43c0-8d8f-fa98374d84ae","e5dbcb10-72b8-4475-88b6-91864ce623e6","e5dbcb10-72b8-4475-88b6-91864ce623e6","2f5221b7-10d0-4b09-b4c5-a3385ef7ca4e","2f5221b7-10d0-4b09-b4c5-a3385ef7ca4e","df4966c8-0bbb-436d-a62b-3c3a17127378","df4966c8-0bbb-436d-a62b-3c3a17127378"]');

const ids$9 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	ids: ids$8
}, Symbol.toStringTag, { value: 'Module' }));

const $$Astro$c = createAstro("https://michael-n-cooper.github.io");
async function getStaticPaths$4() {
  const module = await Promise.resolve().then(() => ids$3);
  const { ids } = module;
  return ids;
}
const $$id$4 = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$c, $$props, $$slots);
  Astro2.self = $$id$4;
  const { id } = Astro2.params;
  return renderTemplate`${renderComponent($$result, "MatrixItemDetails", $$MatrixItemDetails, { "id": id, "type": "Tag", "section": "tags" })}`;
}, "C:/Documents/code/GitHub/michael-n-cooper/daf-front/src/pages/tags/[id].astro", void 0);

const $$file$c = "C:/Documents/code/GitHub/michael-n-cooper/daf-front/src/pages/tags/[id].astro";
const $$url$c = "/daf-front/tags/[id]";

const _id_$4 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	default: $$id$4,
	file: $$file$c,
	getStaticPaths: getStaticPaths$4,
	url: $$url$c
}, Symbol.toStringTag, { value: 'Module' }));

const $$Astro$b = createAstro("https://michael-n-cooper.github.io");
const $$Index$6 = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$b, $$props, $$slots);
  Astro2.self = $$Index$6;
  return renderTemplate`${renderComponent($$result, "Layout", $$Layout, { "title": "User Need Contexts" }, { "default": ($$result2) => renderTemplate` ${renderComponent($$result2, "IdLabel", $$IdLabel, { "section": "user-need-contexts" })} ` })}`;
}, "C:/Documents/code/GitHub/michael-n-cooper/daf-front/src/pages/user-need-contexts/index.astro", void 0);

const $$file$b = "C:/Documents/code/GitHub/michael-n-cooper/daf-front/src/pages/user-need-contexts/index.astro";
const $$url$b = "/daf-front/user-need-contexts";

const index$6 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	default: $$Index$6,
	file: $$file$b,
	url: $$url$b
}, Symbol.toStringTag, { value: 'Module' }));

const ids$6 = JSON.parse('["eeadb859-5aa3-47c6-a930-ba3dd21b599c","20d9f38e-d72e-4fca-abf8-dc7c61b6c57b","499a693e-9b66-428d-80ff-74bde49eea81","b73ddfdd-30f2-40b7-b8ed-9255899daa7b","28dac886-8ddf-4631-8fb9-3cf00a37875b","68464f13-d2c4-4606-9735-01e60c3a137f","d8ae8224-8347-4987-8d0b-d8711c5beabd","6fda1b60-0fec-4b34-a1dc-8328d90750d5","7218d01b-fda9-44a6-bd1d-13931cfc0840","2c75ba30-a758-4cc2-98fb-090fa0e061d3","17436ecc-2b51-417d-a69a-17f14d13b776","64cbf567-8c29-48d7-ae15-397c3a30107c","52d142c0-3f05-47b7-8581-479c8c075ef5","383dbc49-8012-4299-9443-06812baeae24"]');

const ids$7 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	ids: ids$6
}, Symbol.toStringTag, { value: 'Module' }));

const $$Astro$a = createAstro("https://michael-n-cooper.github.io");
async function getStaticPaths$3() {
  const module = await Promise.resolve().then(() => ids$1);
  const { ids } = module;
  return ids;
}
const $$id$3 = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$a, $$props, $$slots);
  Astro2.self = $$id$3;
  const { id } = Astro2.params;
  return renderTemplate`${renderComponent($$result, "MatrixItemDetails", $$MatrixItemDetails, { "id": id, "type": "User Need", "section": "user-needs" })}`;
}, "C:/Documents/code/GitHub/michael-n-cooper/daf-front/src/pages/user-needs/[id].astro", void 0);

const $$file$a = "C:/Documents/code/GitHub/michael-n-cooper/daf-front/src/pages/user-needs/[id].astro";
const $$url$a = "/daf-front/user-needs/[id]";

const _id_$3 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	default: $$id$3,
	file: $$file$a,
	getStaticPaths: getStaticPaths$3,
	url: $$url$a
}, Symbol.toStringTag, { value: 'Module' }));

const $$Astro$9 = createAstro("https://michael-n-cooper.github.io");
const $$Index$5 = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$9, $$props, $$slots);
  Astro2.self = $$Index$5;
  return renderTemplate`${renderComponent($$result, "Layout", $$Layout, { "title": "Digital Accessibility Framework" }, { "default": ($$result2) => renderTemplate` ${maybeRenderHead()}<p><a${addAttribute(baseUri + "matrix", "href")}>Matrix</a> | <a${addAttribute(baseUri + "docs", "href")}>Documentation</a></p> <p>This resource accesses a database of accessibility statements generated in the <a href="https://github.com/accessiblecommunity/Digital-Accessibility-Framework">Digital Accessibility Framework</a> project and presents it in a <a${addAttribute(baseUri + "matrix", "href")}>matrix</a> of functional needs, user needs, and user need contexts. This content can also be accessed by category:</p> <ul> <li><a${addAttribute(baseUri + "functional-need-categories", "href")}>Functional need categories</a> <ul> <li><a${addAttribute(baseUri + "functional-needs", "href")}>Functional needs</a></li> <li><a${addAttribute(baseUri + "intersection-needs", "href")}>Intersection needs</a></li> </ul> </li> <li><a${addAttribute(baseUri + "user-needs", "href")}>User needs</a> <ul> <li><a${addAttribute(baseUri + "user-need-contexts", "href")}>User need contexts</a></li> </ul> </li> <li><a${addAttribute(baseUri + "guidance-statements", "href")}>Accessibility statements</a> <ul> <li><a${addAttribute(baseUri + "tags", "href")}>Tags</a></li> <li><a${addAttribute(baseUri + "references", "href")}>References</a></li> </ul> </li> <li><a${addAttribute(baseUri + "matrix", "href")}>Matrix</a></li> </ul> <p>This site is a static copy and not connnected the database that generates the content. Structured data in JSON-LD format is available at <a${addAttribute(baseUri + "statements.jsonld", "href")}>statements.jsonld</a>.</p> ` })}`;
}, "C:/Documents/code/GitHub/michael-n-cooper/daf-front/src/pages/index.astro", void 0);

const $$file$9 = "C:/Documents/code/GitHub/michael-n-cooper/daf-front/src/pages/index.astro";
const $$url$9 = "/daf-front";

const index$5 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	default: $$Index$5,
	file: $$file$9,
	url: $$url$9
}, Symbol.toStringTag, { value: 'Module' }));

const $$Astro$8 = createAstro("https://michael-n-cooper.github.io");
const $$Index$4 = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$8, $$props, $$slots);
  Astro2.self = $$Index$4;
  const section = "intersection-needs";
  const json = await apiGet$1(section);
  new Array();
  json.forEach(function(item) {
    item.id;
  });
  return renderTemplate`${renderComponent($$result, "Layout", $$Layout, { "title": "Intersection Needs" }, { "default": ($$result2) => renderTemplate` ${maybeRenderHead()}<ul> ${json.map((item) => renderTemplate`<li><a${addAttribute(baseUri + section + "/" + idFrag$1(item.id), "href")}>${item.label}</a></li>`)} </ul> ` })}`;
}, "C:/Documents/code/GitHub/michael-n-cooper/daf-front/src/pages/intersection-needs/index.astro", void 0);

const $$file$8 = "C:/Documents/code/GitHub/michael-n-cooper/daf-front/src/pages/intersection-needs/index.astro";
const $$url$8 = "/daf-front/intersection-needs";

const index$4 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	default: $$Index$4,
	file: $$file$8,
	url: $$url$8
}, Symbol.toStringTag, { value: 'Module' }));

const $$Astro$7 = createAstro("https://michael-n-cooper.github.io");
async function getStaticPaths$2() {
  const module = await Promise.resolve().then(() => ids$9);
  const { ids } = module;
  return ids;
}
const $$id$2 = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$7, $$props, $$slots);
  Astro2.self = $$id$2;
  const { id } = Astro2.params;
  const json = await apiGet$1("intersection-needs/" + id);
  return renderTemplate`${renderComponent($$result, "Layout", $$Layout, { "title": "Intersection need: " + json[0].label }, { "default": ($$result2) => renderTemplate` ${maybeRenderHead()}<p>This is an intersection of the functional needs <a${addAttribute(baseUri + "functional-needs/" + idFrag$1(json[0].functionalNeeds[0].id), "href")}>${json[0].functionalNeeds[0].label}</a> and <a${addAttribute(baseUri + "functional-needs/" + idFrag$1(json[0].functionalNeeds[1].id), "href")}>${json[0].functionalNeeds[1].label}</a>.</p> <p>There are ${json[0].statements.length} guidance statements that support this intersection need:</p> <ul> ${json[0].statements.map((statement) => renderTemplate`<li><a${addAttribute(baseUri + "guidance-statements/" + idFrag$1(statement.id), "href")}${addAttribute(statement.stmt, "title")}>${statement.label}</a></li>`)} </ul> ` })}`;
}, "C:/Documents/code/GitHub/michael-n-cooper/daf-front/src/pages/intersection-needs/[id].astro", void 0);

const $$file$7 = "C:/Documents/code/GitHub/michael-n-cooper/daf-front/src/pages/intersection-needs/[id].astro";
const $$url$7 = "/daf-front/intersection-needs/[id]";

const _id_$2 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	default: $$id$2,
	file: $$file$7,
	getStaticPaths: getStaticPaths$2,
	url: $$url$7
}, Symbol.toStringTag, { value: 'Module' }));

var promises = new Array();

promises.push(apiGet("functional-need-categories"));
promises.push(apiGet("functional-needs"));
promises.push(apiGet("user-needs"));
promises.push(apiGet("user-need-contexts"));
promises.push(apiGet("mappings"));
promises.push(apiGet("statements"));

Promise.all(promises).then((values) => {
	const functionalNeedCategories = values[0];
	const functionalNeeds = values[1];
	const userNeeds = values[2];
	const userNeedContexts = values[3];
	const mappings = values[4];
	const statements = values[5];
	
	const base = "http://localhost:4321/";
	const counts = {};

	const table = document.getElementById("matrixTable");

	//thead
	var thead = document.createElement("thead");

	// row 1: functional need categories
	var row1 = document.createElement("tr");
	row1.append(document.createElement("td"), document.createElement("td"));

	functionalNeedCategories.forEach(function(category) {
		var cell = document.createElement("th");
		cell.id = idFrag(category.id);
		cell.scope = "colgroup";

		var link = document.createElement("a");
		link.href = base + "functional-need-categories/" + idFrag(category.id);
		link.append(document.createTextNode(category.label));

		cell.append(link);
		row1.append(cell);
	});

	thead.append(row1);

	// row 2: functional needs
	var row2 = document.createElement("tr");
	row2.append(document.createElement("td"), document.createElement("td"));

	functionalNeedCategories.forEach(function(category) {
		counts[idFrag(category.id)] = 0;

		functionalNeedList = filterObjectByProperties(functionalNeeds, {"categoryId": category.id});
		row1.cells[idFrag(category.id)].colSpan = functionalNeedList.length;

		functionalNeedList.forEach(function(fn) {
			counts[idFrag(fn.id)] = 0;

			var cell = document.createElement("th");
			cell.id = idFrag(fn.id);
			cell.scope = "col";
		
			var link = document.createElement("a");
			link.href = base + "functional-needs/" + idFrag(fn.id);
			link.append(document.createTextNode(fn.label));

			cell.append(link);
			row2.append(cell);
		});
	});

	thead.append(row2);

	table.append(thead);

	//tbody
	var tbody = document.createElement("tbody");

	// loop user needs
	userNeeds.forEach(function(need) {
		var count = 0;

		// loop user need contexts
		userNeedContexts.forEach(function(context) {
			var row = document.createElement("tr");

			if (count == 0) {
				counts[idFrag(need.id)] = 0;

				var cell = document.createElement("th");
				cell.id = idFrag(need.id);
				cell.scope = "rowgroup";
				cell.rowSpan = userNeedContexts.length;
		
				var link = document.createElement("a");
				link.href = base + "user-needs/" + idFrag(need.id);
				link.append(document.createTextNode(need.label));

				cell.append(link);
				row.append(cell);
			}

			var uncid = idFrag(need.id) + "+" + idFrag(context.id);
			counts[uncid] = 0;
			var cell = document.createElement("th");
			cell.id = uncid;
			cell.scope = "row";
		
			var link = document.createElement("a");
			link.href = base + "user-need-contexts/" + idFrag(context.id);
			link.append(document.createTextNode(context.label));

			cell.append(link);
			row.append(cell);

			// loop functional needs
			functionalNeedCategories.forEach(function(category) {
				functionalNeedList = filterObjectByProperties(functionalNeeds, {"categoryId": category.id});
				functionalNeedList.forEach(function(fn) {
					var cell = document.createElement("td");

					var maps = filterObjectByProperties(mappings, {"fnId": fn.id, "unId": need.id, "unrId": context.id});

					if (maps.length > 0) {
						var div = document.createElement("div");
						div.id = idFrag(maps[0].id);
						div.classList.add("mapping");
						if (maps[0].applicable == "false") {
							div.classList.add("na");
							div.append(document.createTextNode("NA"));
						}

						if (maps.length > 1 || maps[0].stmtId != null) {
							var list = document.createElement("ul");
							maps.forEach(function(map) {
								var stmt = findObjectByProperties(statements, {"id": map.stmtId});

								var item = document.createElement("li");
								var link = document.createElement("a");
								link.href = base + "statements/" + idFrag(map.stmtId);
								link.class = idFrag(map.stmtId);
								link.title = stmt.stmt;
								link.append(document.createTextNode(stmt.label));
								item.append(link);
								list.append(item);

								counts[idFrag(need.id)]++;
								counts[uncid]++;
								counts[idFrag(category.id)]++;
								counts[idFrag(fn.id)]++;
							});
							div.append(list);
						}
						cell.append(div);
					}

					row.append(cell);
				});

			});
			tbody.append(row);
			count++;
		});


	});

	table.append(tbody);
	console.log(counts);

	var countIterator = Object.keys(counts);
	countIterator.forEach(function(c) {
		var cell = document.getElementById(c);
		var span = document.createElement("span");
		span.class = "total";
		span.append(document.createTextNode(" (" + counts[c] + ") "));
		cell.append(span);
	});
});

async function apiGet(path) {
	const data = await fetch ("http://localhost:3000/api/" + path);
	const json = await data.json();
	return json;
}

// Function to find an object based on multiple properties
function findObjectByProperties(array, properties) {
  return array.find(obj => {
    // Check if all specified properties match
    return Object.keys(properties).every(key => compareStr(obj[key], properties[key]));
  });
}
function filterObjectByProperties(array, properties) {
  return array.filter(obj => {
    // Check if all specified properties match
    return Object.keys(properties).every(key => compareStr(obj[key], properties[key]));
  });
}
function compareStr(str1, str2) {
	if (str1.trim().replace(/\s+/g, ' ').toLowerCase() == str2.trim().replace(/\s+/g, ' ').toLowerCase()) return true;
	else return false;
}
function idFrag(uri) {
	return uri.substring(uri.indexOf("#") + 1)
}

const matrix$1 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null
}, Symbol.toStringTag, { value: 'Module' }));

await apiGet$1("functional-need-categories");
await apiGet$1("functional-needs");
await apiGet$1("user-needs");
await apiGet$1("user-need-contexts");
await apiGet$1("mappings");

const dom = new JSDOM("<table id = 'matrixTable'><table>", {url: fileUrl("matrix.html"), runScripts: "dangerously", resources: "usable"});
const document$1 = dom.window;

var tb = document$1.eval('document.getElementById("matrixTable")');

document$1.eval('');

const table = tb.outerHTML;

var __freeze = Object.freeze;
var __defProp = Object.defineProperty;
var __template = (cooked, raw) => __freeze(__defProp(cooked, "raw", { value: __freeze(raw || cooked.slice()) }));
var _a;
const $$Astro$6 = createAstro("https://michael-n-cooper.github.io");
const $$Matrix = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$6, $$props, $$slots);
  Astro2.self = $$Matrix;
  return renderTemplate`${renderComponent($$result, "Layout", $$Layout, { "title": "Matrix" }, { "default": ($$result2) => renderTemplate(_a || (_a = __template([' <link rel="stylesheet" type="text/css"', "> <script", "><\/script>  ", '<p> <input type="checkbox" id="highlightSameStmtControl"> <label for="highlightSameStmtControl">Show same statements</label> <input type="checkbox" id="highlightCellPosControl"> <label for="highlightCellPosControl">Show cell position</label> <input type="checkbox" id="shrinkMatrixControl"> <label for="shrinkMatrixControl">Fit matrix</label> <input type="checkbox" id="showPopupsControl" disabled="true/"> <label for="showPopupsControl">Show enlarged popups</label> </p> <div id="matrix">', "</div> "])), addAttribute(baseUri + "matrix.css", "href"), addAttribute(baseUri + "matrix.js", "src"), maybeRenderHead(), unescapeHTML(table)) })}`;
}, "C:/Documents/code/GitHub/michael-n-cooper/daf-front/src/pages/matrix.astro", void 0);

const $$file$6 = "C:/Documents/code/GitHub/michael-n-cooper/daf-front/src/pages/matrix.astro";
const $$url$6 = "/daf-front/matrix";

const matrix = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	default: $$Matrix,
	file: $$file$6,
	url: $$url$6
}, Symbol.toStringTag, { value: 'Module' }));

function render({ slots: ___SLOTS___ }) {
		return `<html>
    <head>
        <script src="matrix.js"></script>
    </head>
    <body>
        <table id="matrixTable"></table>
    </body>
</html>`
	}
render["astro:html"] = true;

const matrix2 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	default: render
}, Symbol.toStringTag, { value: 'Module' }));

const $$Astro$5 = createAstro("https://michael-n-cooper.github.io");
const $$Index$3 = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$5, $$props, $$slots);
  Astro2.self = $$Index$3;
  const json = await apiGet$1("references");
  return renderTemplate`${renderComponent($$result, "Layout", $$Layout, { "title": "References" }, { "default": ($$result2) => renderTemplate` ${maybeRenderHead()}<p><a href="#guidelines">Guidelines</a> | <a href="#research">Research</a></p> <section id="guidelines"> <h2>Guidelines</h2> <table> <thead> <tr><th scope="col">Reference URI</th><th scope="col">Note</th><th scope="col">Used in</th></tr> </thead> <tbody> ${json.map((reference) => reference.refType == "guidelines" ? renderTemplate`<tr><td><a${addAttribute(reference.refIRI, "href")}>${reference.refIRI}</a></td><td>${reference.refNote}</td><td><a${addAttribute(baseUri + "guidance-statements/" + idFrag$1(reference.stmtId), "href")}>${reference.stmtLabel}</a></td></tr>` : "")} </tbody> </table> </section> <section id="research"> <h2>Research</h2> </section> <table> <thead> <tr><th scope="col">Reference URI</th><th scope="col">Note</th><th scope="col">Used in</th></tr> </thead> <tbody> ${json.map((reference) => reference.refType == "research" ? renderTemplate`<tr><td><a${addAttribute(reference.refIRI, "href")}>${reference.refIRI}</a></td><td>${reference.refNote}</td><td><a${addAttribute(baseUri + "guidance-statements/" + idFrag$1(reference.stmtId), "href")}>${reference.stmtLabel}</a></td></tr>` : "")} </tbody> </table> ` })}`;
}, "C:/Documents/code/GitHub/michael-n-cooper/daf-front/src/pages/references/index.astro", void 0);

const $$file$5 = "C:/Documents/code/GitHub/michael-n-cooper/daf-front/src/pages/references/index.astro";
const $$url$5 = "/daf-front/references";

const index$3 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	default: $$Index$3,
	file: $$file$5,
	url: $$url$5
}, Symbol.toStringTag, { value: 'Module' }));

const ids$4 = JSON.parse('["db8f8ad8-7f2e-4e72-8d17-3a5ed8c2817a","8916defa-5992-4f60-93cb-dc28666c3b65","97bff983-bcbc-40db-ba86-d3c7f79103d8","db2dd531-ce48-44e4-aaff-0743938e65d8","c8d4c576-4b20-4687-bb3b-8d412bd4be5b","8a33d5a0-39b0-4f39-b811-aa25d7d6223f","80c26719-2be2-4463-8e43-03fcc5fb713c","36d9c3d4-1126-4471-ac21-bc6888ae0ddf","8c8962eb-bcd9-4862-bcf3-1a2c756ec0cd","2959c22e-a290-4c56-ade1-f0aff54b0f7a","f918c4b1-d8d1-4c5c-b94c-4d268e513b1c","7b7468bf-c055-420e-a9f1-bab17ad0f9cf","84b56029-2e4a-4b63-af6c-d5c83c454032","f7227fc8-4759-4032-8318-4de7ac6ca394","e3c83f88-cf8c-4d7e-85a7-3d1c126cc9d2","d6697597-5f99-43ca-b97f-a2967fca15ef","c1174973-d97c-444c-a87f-7aa7b6d9418d","eda053d3-353f-4e36-a8f0-b8b078ee2489","45669a83-1791-448e-bb2b-f6c4a74d02a4","5446d9d3-a401-4cc2-946d-c97121e7d6f6","3d0e7332-d7b6-4a19-9866-8c83cbd79469","a9792d76-331b-4f76-ac95-e9238b203933","fbe3b4a1-aef9-4f86-a598-abf936ae4d8a","9a75827c-6650-45cd-b91d-098b11cd4bae","fdeb8ea0-db6c-4732-90ef-1ad49dcadbae","f3130eb8-397c-4695-ab55-2cee69284baf","46c07885-61eb-46d7-8686-5f65dc33b5bd","31c40b24-0b8d-4286-bb64-15d89929461b","79a35266-6b7f-457b-b81d-fbbb7bc36d8b","67087f6c-4e3f-4cbf-b209-0491d4f762ea","6c0ff0d2-628a-472e-a21c-85e7b0d7ca3f","dc391b04-cae8-4607-aaec-c2c89f383cba","1f10b076-6cce-4048-b8b2-7947645c052e","ff7e8d1b-a52c-4cba-8b67-541574eecd10","060bca3f-0680-40f7-82b4-3de6a9e2015c","8108f58b-0f44-4336-964b-4bd72d21ab35","e0d02e94-0630-4246-9bd6-67d5040b1ff2","e8f29209-a9c6-4e5a-a0a3-c15f87fd7142","1cd57f63-a1fe-4da6-ad00-84e25de00216","12b010a2-023f-4412-8a89-ce2c25d0d37c","33cdadb2-be24-4250-ba54-24f805e0d8f7","5c7fd55f-5182-4644-bac1-96934e12f757","0c0ddbd0-eb5f-49aa-8fb5-7e2b2ed23f91","8269a204-91df-4032-aa2b-e54b51161877","c7b59345-34b7-4785-ba82-45a7c68fc6a0","d824c4e2-c004-4f39-b865-371539034d72","614ccd38-88b6-47ad-ac04-1c0803c81543","d53b05f3-dfaa-49bf-8754-b3cdaefeed6c","e98fe6e3-b260-4ff6-b0ee-b8636450c11c","2939caeb-c730-4ecb-8d9d-28978b658cab","9a7f708d-dd9e-4f5e-968c-1f8c101d4003","0215e492-062a-48a6-a122-70de80eaa180","7c2a1df4-c9d0-4212-9b7b-6f77c87cb25b","62ca4724-7428-4ba8-8e39-f6d845139032","451b8b9e-7fbb-43e9-943f-a98408edfc47","522ab36b-a24e-4904-9757-46eed2dfd06d","6d8832e6-1a38-4da3-9d59-7c9abb3b4457","eed454b5-0168-4bb5-8e02-0f9923e2fbc3","b8e3718d-5afc-4a74-a4e7-aa7be1f52620","b54bff8e-afbf-487d-81e0-c906fce1185a","b6ef5a1e-aca9-4ad5-a8a6-a489c9322815","4717d417-1dc1-4c75-92ff-986631899603","9603efc9-bea1-4d0d-8b5b-9fbb0a256fe5","a7889038-d415-410d-852e-38c7d51a71d3","8d232a71-a356-4225-9487-ee040436a6bf","f4072d65-d8fe-4a78-b891-78112b97f64d","8f2b8975-f51a-4cd6-83c5-9fbdf2076e0d","f5f460cc-cb20-460e-982f-9c8a03083982","34be51e8-2bee-427b-8577-f58252340719","d28d34e7-5d56-47fa-84c9-f58eff4acaff","9115315f-9fce-4f21-b76e-abd6b0192ce6","0c5dc1e9-fac0-4213-a001-f6065be95823","39a684a6-bcf4-4952-b310-e94e253dc119","828b2dc6-641d-4dad-bb41-a8cb7cf37af4","61604b3e-d5f5-4d28-8392-0447c6180fbd","5cc6b4ae-e32c-4701-9a8e-cd60f548bf22","8d03d4ff-7981-4201-989f-d0aacec8ff73","8bbfdfa0-6722-4e4e-8fa4-a46b3c65c614","e16748c1-a3ee-450f-a70a-fb21e1a398d7","7a7797bf-cbfd-4eac-99bc-d01aeae5afac","d72c047e-6b32-4d8d-838d-96d62dcb7e7a","0a75226c-69e1-4f21-8d72-aba2285b3efa","3ac77fa9-e086-4bc9-b16c-c00e4d819a25","a69d5664-ab6b-4429-8d50-247a58521d33","81b078d9-0586-44e3-9df1-26bdd0bb729c","908a49e4-d0c1-47d6-9749-58f8f7e5ceb8","9050494a-07d7-4d7c-aa6d-238b2f1cc038","45709170-313c-4955-a3cb-deedb014cb67","604410c9-6616-4ae6-8d72-b802d824c7e9","69c6bf8f-48ac-4608-b6c6-3842d7f93887","066e075e-6ae7-4991-9218-9b06f64d3f8f","0594790f-179d-4198-a2cc-144f1e410049","4be1d709-7f95-4302-bb62-c2f90894218f","5a00f2b1-e1de-45b8-a4ec-1111b248d503","fced3a94-6861-43cd-9d9b-a2f9449cf7a6","731a2bbb-0a92-4149-b0bf-1b6b6d36d38a","12cd7b84-11be-47e1-905c-49f46a886c63","a01416bf-40b1-456d-8c64-74c1c4d3f73e","d14ad691-06c1-449f-bb60-59f7abcc0bab","ae448bdc-b142-4966-ac44-44521c1b12f8","fcdc1f84-6df8-4be6-b218-09e6c8cca7bb","608ecc4b-f7ee-418c-a12f-c583933345fe","b5d1166c-8166-4bd4-beee-58da45d82512","da2d8db9-9387-4214-be79-d598757ac5c6","ce8209f8-f248-43ce-9e0d-2a77dc055caf","58aa4834-f9ed-4fc0-a1b4-bccd46123024","a5b90456-338c-400c-8042-2394b68616e2","201410c9-49cb-455a-a82b-f5727d2487ad","2750868a-d523-4121-9bb9-8139786d3d23","ae37c293-9032-42e0-8a41-a5e62c387928","cddbc53e-57fa-471a-b389-e387a8a8391b","d7a7665c-cceb-47aa-8c06-b7f2da277680","605db1b2-de9c-48b1-867d-aea9a9544edb","197ccd20-b4a7-4f59-8f11-9920c0aa9f87","b16b5dac-a1f5-4583-affd-90904a59242c","e8fc6661-43da-4a1c-9833-c4644f0230ae","be57c363-eb27-46be-b4da-b97e1e2e3f3c","30329e94-37d4-49b9-8465-23f718e7d8d2","6529ebee-4913-4bfa-ba0f-ab96bb0093ff","52ed6231-9b48-4e81-8aee-775179d5b1a5","d8fd9e7e-be2a-47bb-8da8-0e48f4a82cc3","b0759250-6c6c-4f10-ba55-d4c11872184b","009fb90e-ac32-480d-b87f-4667289f494b","1115fd6e-1645-45bd-9627-db58b27e65cc","9aadd972-aa58-404b-9411-66d6b2c17d6b","ea498262-5ffb-4e08-baf0-40f9c79b34d4","df16d4a1-6d23-4c7d-a7b0-51aac452b740","77bce698-d568-44fa-90ba-373c9537080a","d7a711dc-1a59-4b8c-a75c-0ebee3db45cd","2c64f753-ea2c-486d-bc44-06faf41be484","d11e16c0-5d83-424b-8682-f0d6a9277f83","fb44123f-1088-4f22-95cb-e3a9c16ec32f","0a4213a9-f824-47a5-bf00-e557cb9d3aa9","c3334a8a-37ab-42b5-b494-449172e22eff","5611024f-62f9-4b0f-8558-ca0ac9df8fb4","67a99c79-84c3-458d-bcd2-99e53533afc7","5ee1b401-1625-4d15-bd27-665c0ea98e05","6785d01d-5353-4811-a815-b1323d1e0189","1e857848-8b0a-4265-bda4-eb5ff7361142","73e7383a-cf66-4b92-a00f-4fb3b6b557ed","98338995-fb52-4af2-a22b-a9a124b80ade","e3c0870d-cfb8-42f9-9275-3dc7094c6c74","689f5444-07db-4433-8ceb-2713425cd5a0","fb68428c-36ab-453a-8431-e0fe404722ba","d9c71c0d-8312-41f0-b010-4a0b0c5c7796","d6595ddf-589b-409f-a9e9-ffb41067f66a","343c563d-8d80-4630-b3d1-31d482c0fa61","b409fc6a-b147-4863-b4a8-7606573b8cf8","5ba15ec6-6c93-4df9-abd7-fbf639dbe2fd","0960800b-7316-4d96-9b96-39102ac40938","7a532166-2cc8-4fc6-8d12-7bb9c4386a80","c329b145-c9af-4223-bb68-9be85d25f788","521bce39-fa2e-4da5-8948-e3356603d2f9","bfaf2fde-5942-483d-ae7a-3c7ce88e9e2d","b559eeb0-9da6-4e71-a0ef-74ba6511ceb0","fb470f8f-40ef-4326-90e6-107f22e7bbb1","ae6c4264-e02a-403f-ad04-64dd04f57aff","699daf9f-2cb3-4e26-a143-3b1f9e1981a7","28ecbca2-3d4f-4d32-bd51-b8e43b9abba6","da3fe520-edcd-4d0c-9d98-8f4c3508a973","f4b92590-1ff2-4867-afda-1e7e6b1acff6","93550d09-c142-45af-a93e-2cc0fbf2e158","8f7cebf3-a7d8-41fa-9ded-9f1b4f0ac86f","b7f3b725-db69-4e65-9c3f-5f83dca9f067","8b9499ac-eb2b-40f5-b128-3b973757695f","57e34ce9-363b-43f8-8ae2-2e04b9748dba","102e1b20-ecb1-4f22-b9ab-ba69009b8065","50a86cb4-c3ef-4b3b-9d38-0e9f5c7c763d","5933e7ea-bcf6-4f7a-973a-92ee985b5194","26004a91-bc58-4eb2-b08f-859340e848ee","c47bb639-0b56-488d-ad19-65e3af30dab2","77dbf9bb-d678-40ff-bd0f-e6ec97e1f662","df2a6fd0-3c4f-4835-b411-09c00353e653","aba6a10f-ff2f-4427-8534-6536186b4c2c","10a99944-80b4-49db-838a-7c1abd01d0f3","3e9bb593-af1b-4f1d-8e06-3f54ff1dfae3","d0b67148-5bc4-45af-b85c-251b19e7f5a8","b8ee4550-9f67-4fe4-b8cb-50958ee17a98","17bacf99-02cf-430d-a1e5-66c474a8f529","25b3325d-a270-439e-83ac-b14d67b33002","a752e709-de6c-46f5-8545-17d1cf8ac4e4","68efdc0b-515e-46c7-8c4a-3fdad650d9d8","993f3a5c-f2e2-42c5-ad86-e6d911bf6723","df9b9be2-d06e-46e8-b19f-d74168d46692","a721c6a7-ec54-4821-8881-063ecf45774e","669625f0-bc7a-475c-9c85-dfd4fddb4a7b","c8617b34-24b2-42c2-915d-f528c8f714ba","b0c7e05a-3b00-456f-b10c-367828581968","5dee5c3a-181c-4419-9d9a-642dbec79c71","cb7a8cd2-d5d6-4ee2-b7fa-610e1a1ee9a2","db301290-8e6d-443b-9838-25a3baecba43","752b211e-bc96-4c2b-857a-97502810876e","7e979ff4-367e-41f7-917f-cb703076a6ad","fed06b3a-d790-40d7-838b-b4244fd1c0fd","63ca22fa-2095-4147-8ea8-c4c6a85e030b","6869b67f-2daa-4315-8007-9400b0ccc0e2","383bb20e-38c4-417a-8cef-fabad1e67398","ef222dda-7394-4a46-86e4-edd83e27aa83","57e8b5a1-2664-4031-914e-a3105190dac3","53fd5204-f93b-43e1-b3f7-942ff31368d4","f8075387-03dd-40c7-81cf-c3c109f3c1e4","a4a0efbd-4e44-409f-b727-050730577bfd","380dca3e-50cf-4183-ab4b-93562c1055f9","598e3981-e08d-434b-9a7b-84df22a4a677","a3685839-b755-455c-a6ca-0af383c839b7","a57641bb-3ef9-4a3b-9230-12962a105878","de65bced-b558-4c72-8eb8-4b42ef558b43","3cc39505-1cec-463b-b2a3-de982ad84de4","536165be-f6ff-4d67-9276-9198888f55bd","7a94fca1-f965-426d-ba87-4f8c92f935ac","4a01aae8-ae32-4a51-b105-92198a9644b1","027568db-3668-43d2-94b2-855e1b01bb68","ed653f32-79a4-45c5-8390-fe09d1b4e7b9","7189ca4d-85da-4750-8c26-5fe6dbd58d83","41983b19-fdb1-41c8-a2dc-3a2ff29f4ee2","0934a520-f8b6-4913-88f3-7b490a5dab45","7a7a1749-c72d-443e-9288-2c53909cf6ab","4f20978e-1681-4621-b83f-5f22daca6282","151e3430-64a0-4b59-a10a-4f8c766f70e7","df726574-ca86-471c-8263-57b07f3473bf","d262d84c-155c-4c6b-8a57-6e3179c1bde3","b5cfdae0-0d71-4c8f-b1d0-f29035e2a87c","5bffffcf-a6ca-4a11-ad47-16fe0bc161cd","90880a18-6612-4fe2-b60e-ebe52ff261e2","7996b7bb-bb4b-4c33-bd71-ec85ba2f7724","e4bd5644-21fe-47aa-b465-05c7995246ea","52dd56da-a411-417e-a152-d83837a93973","34a8597f-ec81-4eb5-a353-49a49d60b373","532f4fed-a59e-4f92-950d-97ff6a400f54","46f54a13-176e-45c3-aa1f-03f68a19a27c","2b25c452-941b-4ab4-8665-0cc670e7c35f","de90edc1-1cce-4f39-8958-64823effb616","6a2f4eaa-948e-4ad0-8bf7-d31bdf58a124","a5285b35-b34b-4be8-83e8-28bb15f86f73","f99bd394-e5eb-4e44-9fff-ad66dac4acca","b72f0ac6-eec2-4f66-8fb7-f2725ee0210d","56946d61-3715-48a8-a124-9ec4343a1eaf","e3b03d10-5a16-40ef-8229-29ac17b0b205","b721f440-61a2-4f01-bfab-62f0a1c37156","a958c620-bc31-4f90-941b-cf02720b85ff","1df68836-b6c2-45d3-87b3-c6959996c731","49893ede-61f8-498d-b5af-8c4c28b7cb58","85e219e6-2ea2-4be3-acef-c93edc163cee","5e2586c5-76e0-4b29-9332-bf0e04ddd776","c6eaa6a5-7db7-4f00-a231-a8f9fb1b9887","20414fdd-5544-45ac-b2ff-d0479cacd288","a026a690-8005-43cf-9b45-17fada0e706f","a45f771e-a0b6-4f39-8b67-94461f2d9f76","73e330fa-f866-4928-8b73-5c937cab9b1e","c4f6ac75-1a99-4c9b-896c-9cce821d7929","2c29059d-7d8b-458e-9034-5ec2a665a397","b6376423-f2ec-41bd-9b1d-c146378e736a","887e609d-b168-4a38-9318-d19b252c2268","2d953f3c-0f67-4889-a994-845e67429c73","952f4e1d-d1a1-4aee-824b-d5af64899e72","b650a1d4-9ec9-42b5-b652-f37fa8a46b3f","52fd3b3d-2045-4e66-92e3-6b29102d4669","043338e4-b0e8-4bf4-b93e-5c896e5518df","76efbf4d-ec2b-4a86-8d8d-6b99788f4ab3","48b8e8ee-ccd5-43ba-8ce6-d6c771251250","095bd9f1-37ce-4037-b79d-ee9eec21db41","82e71406-bdaf-4e29-b1d2-d3afccef2f02","4f04b652-dac0-48a2-be3f-b3086b52641c","b51b15f5-a7b5-4c0d-8ec5-bbd254c88a60","e505d404-feee-4e3d-9aee-419f7cce3034","0c31caa6-69f0-48c0-aba1-0976b9d83c6d","1b356772-cd76-4da7-8e43-c976cd6bc5f1","e5fb88a1-32be-4725-a019-ab03c1667151","4fd15742-458c-4589-9a54-c3cf5a800d7f","74bccb85-1879-44aa-a9b3-be2110845354","3adb8a50-9b73-46a7-82c8-6a709005ccd3","911e8671-0dc7-4a43-83e0-d1cde0283199","b34fcfa9-bbac-4af5-bebb-ef11395108e3","cc4521f1-74e6-4bf0-bee7-d08047809073","dc77e599-d8c7-45b2-ab54-eda08e0acd44","edf10883-c284-4100-a40a-c2b8326b1ae6","643662ea-8355-486d-a52e-3c2ab6d8bed0","eec0e822-4a04-4e30-b54d-7e076df27063","0b4527c0-902e-4115-a31f-9476f3ee1fbd","645bd0e9-0557-42d5-ac0f-1951ac7d6ea1","260d2fa8-9d02-4576-a418-fffe2cedd46f","7019461a-bc27-406f-ac60-8d7b8fa0edb1","37788c3f-9401-4443-9ac4-c948ff0a5bbb","fd343258-e723-492d-89a0-3d7f8b0f741d","96f11282-9944-4576-9133-84a0e51e2166","fe4b23d9-b8fb-49db-993f-b5f672d23cd2","95852fb0-faba-41da-aaa3-01f356db763c","c41d8afa-1ea6-4197-be0a-5f4f6d00c4b6","8b47a1bf-9e68-4d42-8c1f-44e5faaf425c","626d45c8-b930-41f6-85f9-674c0f9d9c4c","665efe4b-fa81-4ced-8ac2-70502c60aaab","690d476e-a8e8-4d7f-a9fb-b9d59c9568a8","56adfd43-9fe9-4078-9a1a-2a1f7645f5c5","ad82b9e4-5cd5-414e-a8ae-34d7a1e2d678","f8b9e96e-7f0e-4758-ab2f-f7f19a628d6e","c3df32c3-36b6-435a-bb83-8d580c465b62","4184d34d-647e-4937-8ece-74e6516b631c","0f2c6f53-0106-416f-a316-0b7bf87afc08","228c493b-7603-4f8a-b5a6-624db1de1d3e","ce237463-888d-4046-bba3-e9448e918c56","6bcca852-f3ec-4dc4-8012-0faa3e7a41b8","296beebb-bd37-47d9-a7b7-a5570b8757c7","f2d627a3-b2a0-46fc-ad1b-0baaef689535","14693131-3788-42c5-bbdd-bc29bbe0b03e","79489fd0-17d2-44c0-81eb-38094fd1c87d","370c4778-20c6-4f0c-914f-709505523f4c","7c6c60f7-a2d6-4bb6-9e5e-ab0d5f328db5","f186848c-5957-4078-9ede-0f6a4de4942a","ce5bb609-e72a-400b-bae2-65d6551e32bd","39d1b7ea-5cc0-4bbc-8f7c-04f9c7ede830","ee4ffe46-d219-4f1b-8280-169117c5825b","d7307cb1-fb67-422a-971b-33ccc5fc484f","094597eb-57ab-44a7-8724-aace7c5c87ab","03b01a50-08e1-42a7-9385-e0c6bfc59aa1","cb4775df-0351-4f69-b0d6-b841fb9cb3fe","689c96a1-c754-4338-9ca4-3d5197b6b8c1","f4ba6118-7f8c-4983-83ce-094fd0e97754","a6470249-25b5-425f-91bb-fc9165c27ed4","ffbcdcc8-7ff9-46c9-a6a6-88a9108e185a","bf1d2a3c-74f9-40c4-8420-cee368a9fb71","9170c12b-f48f-4e9b-9d6d-9e6dee04d2b0","a4ef6624-d6f5-4fdf-aa7a-1777d20c9141","010a6833-0c83-4207-8dc2-90f7a31cac22","774f87a5-74cc-473a-8bf0-ebe4fdb1c27f","d4e9ea9d-bc6e-4834-94d6-1f35bac3460f","08a2a892-5816-41b9-9884-f88b56891468","523c9968-ca5f-4ede-b133-b7686f258721","a59f9f86-3669-404d-aa0f-7cdde6e4ff7a","fa53c998-8982-442b-89c5-999dbc61255d","b30f8fbd-08e3-4a9a-98f5-24a1f858322b","7e96d960-15a9-4759-87a7-723822e9c16f","80da5e27-c1fc-4a1d-87f1-52ae52c99332","7a8ee26b-ed75-484a-9452-eb297c328f46","34925b0a-e824-4c7a-bb65-e856d5689e53","ef6a8e7d-354f-4ecf-a248-9cfe74cdb9e5","e9be33a1-39db-49c5-95b8-ba549cd74f82","d9c75f78-4d0b-4053-a030-1e44fe8f597f","a860ecfc-b47b-4ea9-90ff-4887067a96fe","1d8f5d83-3937-4795-8998-87c39c401c8c","329d3848-8c3b-4ef1-8a47-69dfca0ff039","f9e708a3-244a-4c0f-a360-9a9a6884b93f","c9d2dfbd-65af-4fa8-b99a-97f9d1e6caa1","94edb56d-2074-42f2-b2c0-26fa761bcb3c","7df65fc1-f564-420e-aeb6-fbf42788c2c3","924730a1-b3f9-48bd-a513-dd67741fee9d","7e3a9baf-ee5d-4ca1-bed2-f4889386c468","12f2b153-a9dc-45d9-b545-66e4065e4c69","c94add91-da65-4c19-a6b9-02042a21f1bc","03c9658a-c6a8-4227-bd7d-1477a9515c2b","07e559b7-2f71-4da1-bba0-f9d7ffb05c4e","90fa6fa1-d9fd-469e-b73a-736be752f666","f846e48b-e87a-425b-b3d2-e83e95d6c8e1","14a04bcc-ed54-48c9-9463-f4328605c027","b510cb67-0398-4727-8fd4-942450c2f6cd","49b159ec-ccfa-4ab8-87c8-dc43de5bede4","32806b95-6050-4003-bd8e-d7befc082bec","3621e252-9d15-4fe3-a75c-404c65c594a9","6175c950-171c-4894-b4d7-82d4618c6de5","7828a92c-b7f2-4bf2-b2ad-527b101c73f2","c75902ae-c5d4-4b58-b4e0-cee86d48834f","f7084a74-6e41-458f-ae7a-98035c01902a","d6f2aae0-cce8-4390-9b33-3e58de3b4273","3e913d8f-5032-4744-95a4-12186c160ac4","018374f9-3cf2-4157-8ebd-45bc74412320","27df3a15-ece5-40ef-b079-a786b5d97a8c","02269ca6-8039-4a44-93a9-f0c6b6979b54","a5ee4c0d-c4f9-48c7-85ad-919c3d988ff2","93bec39d-d25e-4f6f-8956-e6a8371a5231","2c03dafe-922e-4a53-a435-6b01d639b2e4","e5225e08-6921-40d5-9955-fb2f1a988784","356c22f1-d8d2-47e7-b0e1-108459a51199","db72f6f7-a08a-4f2b-9a10-6e0416f30b07","3ea98f30-044a-4235-ada8-e5b30da4c625","d3c0fd37-9b10-4432-b91a-864fdf8d69a7","169810ec-6a6c-46f1-b8c1-4815dd89b814","b51461d5-8ea1-4c16-88a1-6a9d87e9cb14","27d69145-c4fa-4e77-a2f4-70311974c985","075ced89-1c64-4b36-84d9-30978cd0ae5a","bdb825bd-61df-4e48-9936-8de95933977d","931ead8a-17ce-4345-8376-fe7d4bc8995f","8d2d3c2a-f83f-4994-8ef8-db56d692f7f6","427f3ace-415f-42ec-9626-e5e3e855b840","28d95a51-3f14-4cc1-a510-1d2b2a7b5018","ddb9b0bb-007f-4187-92e9-cbf07a11b580","7a63876f-0059-41cb-9c1d-c886a9a1cf60","9d8637e3-bfc7-4a2d-948a-fadafc951b2f","813506e7-41c2-4bbd-939c-221647543853","100d0448-2521-42c2-b8f5-90cda1317e65","ece8fe07-cd48-466a-b886-618ed35a279e","12ec5d89-8d64-4ef4-bbd3-bf1973184e1f","a3148277-5714-41bb-850a-a499fe44b539","dd06dad2-11db-42ec-a1ae-6c8c6a64aad3","c9586c4b-3e31-4e5a-b50a-f768a58da3f0","c1637850-4bb9-494e-9371-73e9bf8f27de","4678e20b-63ce-49fe-826a-4ab5ef4ce528","7c603983-528c-48e2-ad66-98764dc643df","ab2d704a-111d-4333-a200-03528d350295","a775c588-c5c8-4874-b539-e1e241440761","33458247-45ec-4d8f-af90-d7d09a1d7356","c800a101-1c26-40bc-b221-d434a1647701","9132ef80-776c-48a4-9842-1b02fe699ee6","29b5f7f8-d474-4630-ba8a-2b008f55cf5f","7e9efb17-4764-4a40-9f9d-54e9724811d8","90cfa6fa-9896-4d87-b7b9-3c2764855861","7cfe75d3-d064-4e5e-9716-f3fc6acc434a","ea7470ea-8a03-4a68-97dc-7305745f1aa5","d0f73c56-f936-4ab4-ad42-7e49db5c26cd","b02a4b63-b629-4a3c-ba3f-175dd2075230","cdc42a97-6c10-4430-9b8e-870d6f129be9","8607ac65-8b7c-4f86-85b7-e630837c8f5a","dcab3889-1548-4f29-9bd3-cb896a8790fc","898ff1e5-3f3c-467b-929e-b067b55f3063","545069ce-cc9a-41e7-8280-423f9a743811","d8f27e11-bd66-4e14-ae9a-70a2f32c02a3","28b8cdeb-6ee3-41b1-a27e-8bf05200e8d9","6cc3b672-3209-453f-b523-c942fe2daccf","e2bad964-c43a-4c87-96c5-0eead198c3ca","c53667a4-8cb9-4da5-a433-21da77c7899c","3cfdf341-8a4f-47bb-9007-586f5bd36f04","38e23921-7ba2-422c-8be4-1d5bdb24a4d6","8956d316-dc8c-4ae4-9db8-34b181af09d1","943ae698-33c7-49ce-84c8-c83ed9f1d03c","a063f141-a926-49ab-a7d6-2f28fa702d1b","8d31b114-1820-4a33-b843-432f14f19602","a9c384a9-f960-4e64-b5c4-5efff983ef8f","6ff7930d-be18-4f14-a2a8-7ae8fce251b9","efd38b9e-bf9d-4cf9-a50a-fc4dec310a51","504d2583-ceb3-4283-b8ad-86f406e415e0","b6f4e46b-6413-4182-96dd-168950c67f98","bb86985a-9d78-4502-9e8d-062db7edb5ce","5f1a06fb-0466-4b36-8de1-8b01fdb442cb","9152215b-63b9-4cef-8e1f-5321c74075c4","5afca0b3-9167-4a50-8772-197faaad5d67","2c26613a-c97f-40e9-8bc0-cb2a84994267","2deb4f8a-b519-4507-a4b3-ad8494ccde5d"]');

const ids$5 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	ids: ids$4
}, Symbol.toStringTag, { value: 'Module' }));

const $$Astro$4 = createAstro("https://michael-n-cooper.github.io");
async function getStaticPaths$1() {
  const module = await Promise.resolve().then(() => ids$5);
  const { ids } = module;
  return ids;
}
const $$id$1 = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$4, $$props, $$slots);
  Astro2.self = $$id$1;
  const { id } = Astro2.params;
  return renderTemplate`${renderComponent($$result, "MatrixItemDetails", $$MatrixItemDetails, { "id": id, "type": "Reference", "section": "references" })}`;
}, "C:/Documents/code/GitHub/michael-n-cooper/daf-front/src/pages/references/[id].astro", void 0);

const $$file$4 = "C:/Documents/code/GitHub/michael-n-cooper/daf-front/src/pages/references/[id].astro";
const $$url$4 = "/daf-front/references/[id]";

const _id_$1 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	default: $$id$1,
	file: $$file$4,
	getStaticPaths: getStaticPaths$1,
	url: $$url$4
}, Symbol.toStringTag, { value: 'Module' }));

const $$Astro$3 = createAstro("https://michael-n-cooper.github.io");
const $$Index$2 = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$3, $$props, $$slots);
  Astro2.self = $$Index$2;
  return renderTemplate`${renderComponent($$result, "Layout", $$Layout, { "title": "Tags" }, { "default": ($$result2) => renderTemplate` ${renderComponent($$result2, "IdLabel", $$IdLabel, { "section": "tags" })}` })}`;
}, "C:/Documents/code/GitHub/michael-n-cooper/daf-front/src/pages/tags/index.astro", void 0);

const $$file$3 = "C:/Documents/code/GitHub/michael-n-cooper/daf-front/src/pages/tags/index.astro";
const $$url$3 = "/daf-front/tags";

const index$2 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	default: $$Index$2,
	file: $$file$3,
	url: $$url$3
}, Symbol.toStringTag, { value: 'Module' }));

const ids$2 = JSON.parse('["3fb51297-0b04-4619-b0d4-e30e5ec8213f","bbaa1b60-7584-455c-8a03-61292ec67fe6","f629947b-8b34-4729-bc0c-0712e3571228","79bebc7d-c209-4083-b100-3be974f280dd","f0e1ea99-ceba-4233-b603-b701290e6fa1","5975c095-6121-4586-aa02-3abf11ff6b24","7fe20c99-2913-4f5a-a569-50d61f7e8b09"]');

const ids$3 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	ids: ids$2
}, Symbol.toStringTag, { value: 'Module' }));

const $$Astro$2 = createAstro("https://michael-n-cooper.github.io");
const $$Index$1 = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$2, $$props, $$slots);
  Astro2.self = $$Index$1;
  return renderTemplate`${renderComponent($$result, "Layout", $$Layout, { "title": "User Need Category" }, { "default": ($$result2) => renderTemplate` ${renderComponent($$result2, "IdLabel", $$IdLabel, { "section": "user-need-categories" })} ` })}`;
}, "C:/Documents/code/GitHub/michael-n-cooper/daf-front/src/pages/user-need-categories/index.astro", void 0);

const $$file$2 = "C:/Documents/code/GitHub/michael-n-cooper/daf-front/src/pages/user-need-categories/index.astro";
const $$url$2 = "/daf-front/user-need-categories";

const index$1 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	default: $$Index$1,
	file: $$file$2,
	url: $$url$2
}, Symbol.toStringTag, { value: 'Module' }));

const $$Astro$1 = createAstro("https://michael-n-cooper.github.io");
async function getStaticPaths() {
  const module = await Promise.resolve().then(() => ids$7);
  const { ids } = module;
  return ids;
}
const $$id = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$1, $$props, $$slots);
  Astro2.self = $$id;
  const { id } = Astro2.params;
  return renderTemplate`${renderComponent($$result, "MatrixItemDetails", $$MatrixItemDetails, { "id": id, "type": "User Need Context", "section": "user-need-contexts" })}`;
}, "C:/Documents/code/GitHub/michael-n-cooper/daf-front/src/pages/user-need-contexts/[id].astro", void 0);

const $$file$1 = "C:/Documents/code/GitHub/michael-n-cooper/daf-front/src/pages/user-need-contexts/[id].astro";
const $$url$1 = "/daf-front/user-need-contexts/[id]";

const _id_ = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	default: $$id,
	file: $$file$1,
	getStaticPaths,
	url: $$url$1
}, Symbol.toStringTag, { value: 'Module' }));

const $$Astro = createAstro("https://michael-n-cooper.github.io");
const $$Index = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro, $$props, $$slots);
  Astro2.self = $$Index;
  return renderTemplate`${renderComponent($$result, "Layout", $$Layout, { "title": "User Needs" }, { "default": ($$result2) => renderTemplate` ${renderComponent($$result2, "IdLabel", $$IdLabel, { "section": "user-needs" })} ` })}`;
}, "C:/Documents/code/GitHub/michael-n-cooper/daf-front/src/pages/user-needs/index.astro", void 0);

const $$file = "C:/Documents/code/GitHub/michael-n-cooper/daf-front/src/pages/user-needs/index.astro";
const $$url = "/daf-front/user-needs";

const index = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	default: $$Index,
	file: $$file,
	url: $$url
}, Symbol.toStringTag, { value: 'Module' }));

const ids = JSON.parse('["269a8573-0dde-4a20-82f7-c35cfe5d2801","7e3efc35-5658-4fbd-acb3-0706f1fe861e","420fdce5-b640-4210-a93d-571e9a8b33f4","7c535f8d-a8d9-44c6-8db8-8640b6fb4157","dd94c3ce-3f06-4a29-9ade-899a20fa5a36"]');

const ids$1 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	ids
}, Symbol.toStringTag, { value: 'Module' }));

export { _id_ as A, index as B, ids$1 as C, _id_$7 as _, index$9 as a, ids$f as b, index$8 as c, ids$d as d, _id_$6 as e, index$7 as f, ids$b as g, _id_$5 as h, index$a as i, ids$9 as j, _id_$4 as k, index$6 as l, ids$7 as m, _id_$3 as n, index$5 as o, index$4 as p, _id_$2 as q, matrix$1 as r, matrix as s, matrix2 as t, index$3 as u, ids$5 as v, _id_$1 as w, index$2 as x, ids$3 as y, index$1 as z };
